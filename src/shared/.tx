 <div className="container px-6 py-3 mx-auto md:flex">
        <div className="flex items-center justify-between">
          <div
            onClick={toggleNavbar}
            className="bg-[#0e7673] px-2 py-2 rounded text-white mx-3"
          >
            <FaBars />
          </div>
          <Link to="/">
          <img
              className="bg-sky-500 px-4 py-4 rounded-full my-3"
              src={fImg}
              alt=""
            />
          </Link>
          <h2 className="text-4xl font-bold text-white">
              Furni<span className="text-sky-500"> Flex</span>
            </h2>
          <div className="flex lg:hidden">
            <button
              onClick={() => setIsOpen(!isOpen)}
              type="button"
              className="text-gray-500 dark:text-gray-200 hover:text-gray-600 dark:hover:text-gray-400 focus:outline-none focus:text-gray-600 dark:focus:text-gray-400"
              aria-label="toggle menu"
            >
              {!isOpen ? (
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  className="w-6 h-6"
                  fill="none"
                  viewBox="0 0 24 24"
                  stroke="currentColor"
                  strokeWidth="2"
                >
                  <path
                    strokeLinecap="round"
                    strokeLinejoin="round"
                    d="M4 8h16M4 16h16"
                  />
                </svg>
              ) : (
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  className="w-6 h-6"
                  fill="none"
                  viewBox="0 0 24 24"
                  stroke="currentColor"
                  strokeWidth="2"
                >
                  <path
                    strokeLinecap="round"
                    strokeLinejoin="round"
                    d="M6 18L18 6M6 6l12 12"
                  />
                </svg>
              )}
            </button>
          </div>
        </div>

        <div
          className={`${
            isOpen
              ? "translate-x-0 opacity-100 "
              : "opacity-0 -translate-x-full"
          } absolute inset-x-0 z-20 w-full px-6 py-4 transition-all duration-300 ease-in-out bg-white dark:bg-gray-800 md:mt-0 md:p-0 md:top-0 md:relative md:opacity-100 md:translate-x-0 md:flex md:items-center md:justify-between`}
        >
       <div className="relative mt-4 md:mt-0 space-x-10 md:mx-10 md:py-0 justify-center items-center">
    <a className="my-2 text-gray-700 transition-colors duration-300 transform hover:text-blue-500 md:mx-4 md:my-0" href="#">Home</a>
    <a className="my-2 text-gray-700 transition-colors duration-300 transform hover:text-blue-500 md:mx-4 md:my-0" href="#">Shop</a>
    <a className="my-2 text-gray-700 transition-colors duration-300 transform hover:text-blue-500 md:mx-4 md:my-0" href="#">Contact</a>
    <a className="my-2 text-gray-700 transition-colors duration-300 transform hover:text-blue-500 md:mx-4 md:my-0" href="#">About</a>
</div>


          <div className="flex flex-row px-2 gap-2 -mx-4 md:flex-row md:mx-10 md:py-0 my-3 lg:my-0">
            <div className="relative">
              <div
                onClick={modalShopping}
                className="rounded-full text-3xl items-center mx-3 relative cursor-pointer"
              >
                <AiOutlineShopping />
              </div>

              <div className="absolute -bottom-0 -right-0 bg-black rounded-full w-5 h-5 flex items-center justify-center">
                <p className="text-white text-xs">{userCards.length}</p>
              </div>
            </div>
            {/* users presence and absence */}
            <div>
              {user ? (
                <div className="flex items-center gap-3">
                  {/* User Profile Image */}
                  <div className="relative">
                    <img
                      src={user.photoURL} // Assuming you have the user photoURL
                      alt="User"
                      className="w-10 h-10 rounded-full object-cover cursor-pointer"
                      onClick={toggleMenu}
                    />

                    {/* Dropdown Menu */}
                    {menuOpen && (
                      <div className="absolute right-0 mt-2 w-48 bg-white border border-gray-200 rounded-lg shadow-lg z-10">
                        <div
                          onClick={handleSignOut}
                          className="px-4 py-2 hover:bg-gray-100 cursor-pointer font-semibold"
                        >
                          Logout
                        </div>
                        <Link
                          to="/dashboard/profile"
                          className="block px-4 py-2 hover:bg-gray-100 font-semibold"
                          onClick={() => setMenuOpen(false)} // Close the menu when clicked
                        >
                          Dashboard
                        </Link>
                      </div>
                    )}
                  </div>
                </div>
              ) : (
                // Show Login/Signup if user is not logged in
                <div className="px-4 py-2 text-white font-xl transition-colors duration-300 transform rounded dark:text-gray-200 bg-[#0e7673] hover:bg-red-600 dark:hover:bg-gray-700 md:mx-2">
                  <Link to="/login">Login / SignUp</Link>
                </div>
              )}
            </div>
          </div>
        </div>
      </div>